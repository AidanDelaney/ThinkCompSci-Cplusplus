
$CATEGORY: Introduction

::Who Defined Computing::[markdown]The formal idea of a computer was defined by {
  ~Richard Stallman #Stallman started the GNU project, he didn't define computation.
  ~Bjarne Stroustrup #Stroustrup introduced C++ a full 50 years after the definition of computation.
  =Alan Turing
}

::Who Introduced C++::[markdown]The C++ language was introduced by {
  ~Dennis Richie #Both Richie and Thompson developed the C programming language on which C++ is based.
  ~Ken Thompson  #Both Richie and Thompson developed the C programming language on which C++ is based.
  =Bjarne Stroustrup
}

::LibreOffice Programming Language::[markdown]The [LibreOffice](https://www.libreoffice.org/) suite is mostly written in {
  =C++
  ~Java
  ~JavaScript
  ~Haskell
}

::Current C++ Version::[markdown]The current version of C++ is {
  =C++17 #Yes, C++ is a modern programming language
  ~C++11 #Nearly, this version of the standard has been superseeded
  ~C++20 #The future calls! We're not on C++20 yet.
  ~C99 #Nope, not a chance. This is a C standard not a C++ standard.
}

::Formal Language::To program a computer we need to use a {
  =formal
  ~informal
} language.

$CATEGORY: Hello World

::Hello World Program::[markdown] The program
```c++
#include <iostream>
int main() {
  std::cout << "Hello, world";
  return 0;
}
```
prints {
  =Hello, world
  ~hello, world
  ~"Hello, world"
} to the console.

::On Whitespace::All of {
  =tab characters, space characters and newlines
  ~space characters and newlines
  ~tab characters and space characters
} are referred to as whitespace characters.

::Program Entry Point::A C++ program begins in a function called {
  =main
  ~Main
  ~begin
  ~start
}

::Identifying ostream::[markdown]The `<<` symbol is known as the {
  =ostream operator
  ~pipey pipe #No. There is another character '|' referred to as pipe.
  ~Guillmets #Although they look like the quotation marks used in the French language, they're not.
}

$CATEGORY: Types

::Int::[markdown] The literal `3` is a/an {
  =int
  ~float
  ~string
  ~char
}

::Float::[markdown] The literal `3.1415` is a/an {
  ~int
  =float
  ~string
  ~char
}

::Char::[markdown] The literal `'a'` is a/an {
  ~int
  ~float
  ~string
  =char
}

::String::[markdown] The literal `"moo"` is a/an {
  ~int
  ~float
  =string
  ~char
}

::Variables::[markdown]If I create `int my_int = 4` can I assign `my_int = 3.14`? {
  =False
  ~True
}

$CATEGORY: Functions

$CATEGORY: IO

$CATEGORY: Conditionals

$CATEGORY: Iteration

$CATEGORY: Lists

$CATEGORY: MemoryManagement

$CATEGORY: ProjectManagement

$CATEGORY: ComputerOrganisation